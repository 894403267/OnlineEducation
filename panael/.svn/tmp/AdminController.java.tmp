package com.example.controller;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.entry.Admin;
import com.example.entry.Student;
import com.example.entry.User;
import com.example.service.AdminService;

<<<<<<< .mine
@CrossOrigin(origins= {"http://localhost:8057","null"})
=======
import java.util.List;

@CrossOrigin(origins= {"http://localhost:8080","null"})
>>>>>>> .r36
@Controller
public class AdminController {
	
	@Resource
	private AdminService adminService;
	public List<User> findUserList;
		
	public List<User> getFindUserList() {
		return findUserList;
	}
	public void setFindUserList(List<User> findUserList) {
		this.findUserList = findUserList;
	}
	@RequestMapping("/userIndex.php")
	public String userIndex(HttpServletRequest request) {
		return "admin/user_list";
	}
	
	//查询用户列表数据
	@RequestMapping(value="/searchUserList",method=RequestMethod.POST)
	@ResponseBody
	public List<User> searchUserList() {
		findUserList = adminService.searchUserList();
		for(User user : findUserList) {
			  String userName = user.getUser_name();
     		  int userId = user.getUser_id();
			  user.setUser_name("<a onclick = editUser(" + userId + ")>" + userName + " </a>");
		}
		return findUserList;
	}
	
	//查询单个用户数据
	/*@RequestMapping(value="/searchUserSelf")
	@ResponseBody
	public Object searchUserSelf(int user_id) {
		User user = adminService.searchUserSelf(user_id);
		return user;
	}
	*/
	//插入数据
	@RequestMapping(value="/insertUser",method=RequestMethod.POST)
	public int insertUser(User user) {
        //获取本地时间，赋值到User表内
		SimpleDateFormat time = new SimpleDateFormat("yyyyMMddHHmmss");
		user.setCreate_time(time.format(new Date()));
		user.setUpdate_time(time.format(new Date()));
		return adminService.insertUser(user);
	}
	
	@RequestMapping(value = "judge", method = RequestMethod.POST)
	@ResponseBody
	public String jumpPage(@RequestBody Map<String, String> map,HttpServletResponse response) {		
		Cookie cookie=new Cookie("id", map.get("id"));
		cookie.setMaxAge(600);
		response.addCookie(cookie);
		return "1";
		
//		Admin admin = adminService.checkLogin(map.get("id"));		
//		if (admin == null) {
//			return "0";
//		} 
//		else {
//			if (admin.getPassword().equals(map.get("password"))) {
//				Cookie cookie=new Cookie("id", map.get("id"));
//				cookie.setMaxAge(600);
//				response.addCookie(cookie);
//				return "1";
//			} else {
//				return "-1";
//			}
//		}
	}
	
	
}

